import React from "react";
import { Buffer } from 'buffer';
import { Observable, pluck } from "rxjs"

/*** dataProcessingImports ***/

interface DataChunk {
    data: Buffer
}

interface BaseProps {
    componentArgs: string[]
    componentName: string
    stdout: (data: any, encoding?: string ) => void
    closeStdout: () => void
    close: () => void
}

interface RawProps extends BaseProps {
    data$: Observable<DataChunk>
}

type StateData = /*** outputDataType ***/

interface Props extends BaseProps {
    data: StateData
}

export function getHelpText() {
    return "/*** componentNameCamelCase ***/ help text"
}

export const pipeObservable = (data$: Observable<DataChunk>): Observable<StateData> => {
    return data$.pipe(pluck('data'), 
        /*** dataPipeline ***/
    )
}

const ZintWrapper = (props: RawProps) => {


    const [data, setData] = React.useState<StateData>()
    
    const {data$, ...rest} = props
    React.useEffect( () => {
        const subscription = pipeObservable(data$)
            .subscribe((data: StateData) => setData(data))

        return () => subscription.unsubscribe()
    }, [])

    return data !== undefined ? </*** componentNameCamelCase ***/ data={data} {...rest} /> : null
}

const /*** componentNameCamelCase ***/ = (props: Props) => {
    
    // insert your component code here!

    return <div style={{color: 'white'}}>
        <pre>
        {props.data}
        </pre>
    </div>

}

export default ZintWrapper;