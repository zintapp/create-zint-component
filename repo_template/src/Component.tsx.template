import React from "react";
import { Buffer } from 'buffer';
import { Observable, pluck } from "rxjs"

/*** dataProcessingImports ***/


interface DataChunk {
    data: Buffer
}


interface Props  {
    data$: Observable<DataChunk>
    componentArgs: string
}

const /*** componentNameCamelCase ***/ = (props: Props) => {
    
    const [data, setData] = React.useState</*** outputDataType ***/>()

    React.useEffect( () => {
        const subscription = props.data$.pipe(
            pluck('data'),
           /*** dataPipeline ***/
        ).subscribe((data: /*** outputDataType ***/) => setData(data))
        
        return () => subscription.unsubscribe()
    }, []);

    return <div>
        <pre>
        {data}
        </pre>
    </div>

}
export default /*** componentNameCamelCase ***/;